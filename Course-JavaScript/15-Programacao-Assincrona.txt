//Oque é programação assincrona?
-Até agora programamos de uma maneira que uma ação acontecia após a outra;
-A programação assíncrona trabalha nesta questão, ações podem ser executadas ao tempo todo sem uma "fila";
-Um exemplo:Usuário está no checkout, manda salvar seu endereço na conta, mas pode prosseguir para a finalização sem recarregar a página, pois adicionar endereço ocorre de forma assíncrona;
-Também chamado de ajax

//Callbacks
-Uma das vertentes a programação assíncrona é fazer ações que aconteçam depois de um tempo por meio de callbacks;
-Callback é uma função que faz uma ação após algum acontecimento no código;
-Podemos realizar um callback com a função setTimeout, veja:

//Promises
-As promises são ações assíncronas que podem produzir um valor em algum momento noi código;
-Uma forma de dizer a linguagem que um valor pode estar presente em um futuro do código;
-O objeto das promises é Promise, resolve é o método que resolve uma Promise, o then é o que faz ela poder ser executada em um ponto futuro;
-Basicamente estamos deizendo que promemos pro javascript em que algum ponto futuro usaremos aquele valor. 

//Falha nas promises 
-Uma promise pode falhar, podemos reter esse erro com um método chamado catch;
-Com ele podemos exibir o erro no console, por exemplo, e fazer o debug no código;