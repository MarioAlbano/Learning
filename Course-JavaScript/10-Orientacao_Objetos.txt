***CONCEITOS DE ORIENTAÇÃO A OBJETOS***

//Orientação a objetos
-Uma forma de programar, que utiliza os objetos como o seu principal princípio;
-Além de utilizar conceitos e técnicas que envolvem objetos;
-a maioria dos softwares, na parte de back-end, são desenvolvidos em cima desse paradigma;
-Grandes frameworks se aproveitam desta técnica: Laravel(framework de php), Django(framework de phyton) e etc;
-Quando se aprende este conceito, ele serve para outras linguagens de promgramação;

//Métodos
-Propriedades que servem como funções;
-Ou seja, as ações dos objetos;
-Invocamos os métodos da mesma maneira que funções;
-Normalmente os métodos interagem com os objetos;
-Até mudando os valores das suas propriedades para corresponder a lógica do programa desenvolvido;
-This significa daquele objeto ou daquela coisa;


//Prototypes 
-Um objeto fallback de outro objeto;
-Quando um objeto recebe uma requisição de uma prorpiedades que não tem, ela procura no prorotype deste objeto;
-O prototype de um objeto criado do zero é o Object, que tem os métodos nativos da linguagem;
-Resumindo: Volta nas prorpiedades do objeto pai para procurar se há algo relacionado
-Object é o pai de todos os objetos;

//Mais sobre Prototypes
-Quando criamos um objeto a partir de um outro, a base será o prototype, seja do object ou novo objeto que nós criamos ;
-Ele herará tanto os métodos e propriedades de Object( o prototype do objeto base);
-Quanto os do objeto base para este novo;


//Classes 
-O prototype do javaScrip pode ser chamado de classe;
-Pois nas outras linguagens uma Class é um molde de um objeto;
-Ou seja, podemos criar diversos objetos em cima de um prototype;

